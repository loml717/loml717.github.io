<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>loml717</title>
        <link>https://loml717.github.io/</link>
        <description>Recent content on loml717</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>loml717</copyright>
        <lastBuildDate>Mon, 07 Oct 2024 16:38:15 +0800</lastBuildDate><atom:link href="https://loml717.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>网络协议</title>
        <link>https://loml717.github.io/p/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</link>
        <pubDate>Mon, 07 Oct 2024 16:38:15 +0800</pubDate>
        
        <guid>https://loml717.github.io/p/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</guid>
        <description>&lt;h1 id=&#34;网络协议&#34;&gt;网络协议
&lt;/h1&gt;&lt;p&gt;网络协议是计算机网络中进行数据交互而建立的一种规则，即一套约定、标准的集合。&lt;/p&gt;
&lt;h2 id=&#34;osi七层模型&#34;&gt;OSI七层模型
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;七层模型&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;层概念&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;层功能&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;协议&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;物理层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;数据链路层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;物理链路层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;以二进制的数据形式在物理媒介上进行传输数据&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ISO@2100&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;网络层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;网络&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;为数据包选择路由&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;IP、ICMP、BGP、OSPF&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;传输层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;传输&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;提供端对端的接口&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;TCP、UDP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;会话层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;表示层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;应用层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;最接近用户的应用层&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;提供文件传输、邮件、文件共享、数据加密等等&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;HTTP、SNMP、FTP、NFS、DNS&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1应用层&#34;&gt;1、应用层
&lt;/h3&gt;&lt;p&gt;通过进程间的数据交互来完成特定的网络应用，对于不同的网络应用需用不同的网络协议。如，web 服务用 HTTP 协议、邮件传输用 SMTP 协议。应用层间交互的数据称之为&lt;strong&gt;报文&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNS 协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;域名解析系统（DNS	Domain Name System），DNS 是互联的一个分布式数据库，主要存储 IP 和域名的对应关系，能够让用户更方便的访问互联网，而不用记住繁琐的 ip 地址。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP 协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;超文本传输（HTTP	HyperText Transfer Protocol），为了便于发布和接受 HTML 文件。&lt;/p&gt;
&lt;h3 id=&#34;2传输层&#34;&gt;2、传输层
&lt;/h3&gt;&lt;p&gt;为两台主机之间的进程进行提供数据传输。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCP 协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;传输控制协议（TCP	Transmission Control Protocol），提供面向连接的、可靠的数据传输服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UDP 协议&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用户数据协议（UDP	User Datagram Protocol），提供无连接的数据传输，不保证数据安全可靠性。UDP 无报文，支持一对一、一对多、多对一、多对多的交互通信。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Git使用教程</title>
        <link>https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
        <pubDate>Sun, 29 Sep 2024 17:15:03 +0800</pubDate>
        
        <guid>https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
        <description>&lt;img src="https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git.png" alt="Featured image of post Git使用教程" /&gt;&lt;h1 id=&#34;git使用教程&#34;&gt;Git使用教程
&lt;/h1&gt;&lt;h2 id=&#34;初始化配值&#34;&gt;初始化配值
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装
&lt;ul&gt;
&lt;li&gt;官网上点击下载即可，除安装位置外，只需点击下一步。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;初始化配置
&lt;ul&gt;
&lt;li&gt;配置用户名和邮箱 &lt;code&gt;git config --global user.name &amp;quot;loml717&amp;quot;&lt;/code&gt;  &lt;code&gt;git config --global user.email loml717@learn.com&lt;/code&gt;，用于标识提交内容的身份是谁
&lt;ul&gt;
&lt;li&gt;省略（Local）：本地配置，只对本地仓库有效&lt;/li&gt;
&lt;li&gt;&amp;ndash;global：全局配置，所有仓库生效&lt;/li&gt;
&lt;li&gt;&amp;ndash;system：系统配置，对本电脑所有用户生效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;保存用户名和密码 &lt;code&gt;git config --global credential.helper store&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看 Git 配置信息 &lt;code&gt;git config --global --list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;新建版本库&#34;&gt;新建版本库
&lt;/h2&gt;&lt;p&gt;创建仓库的两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;本地创建仓库：&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过添加参数，如 &lt;code&gt;git init my-repo&lt;/code&gt; 则会创建一个名为 my-repo 的仓库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 &lt;code&gt;git init&lt;/code&gt; 初始化本地仓库后，git 会在当前文件夹下创建 .git 文件夹，用于保存该文件夹的仓库信息，并表明该文件夹为一个仓库。删除 .git 文件夹，则表明该文件夹不是仓库。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png&#34;
	width=&#34;1258&#34;
	height=&#34;244&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93_hu9586326607969133416.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93_hu3950280678455723763.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;515&#34;
		data-flex-basis=&#34;1237px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从远程服务器克隆一个仓库：&lt;code&gt;git clone&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git clone &amp;lt;远程仓库地址&amp;gt; 即可将远程仓库创建至本地&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git的工作区域和文件状态&#34;&gt;Git的工作区域和文件状态
&lt;/h2&gt;&lt;p&gt;Git 的数据管理可分为三个区域：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工作区：实际操作的目录，.git 所在的目录&lt;/li&gt;
&lt;li&gt;暂存区：临时存放即将提交的修改内容&lt;/li&gt;
&lt;li&gt;本地仓库：Git 存储代码的版本信息的主要位置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Git 文件中的几种状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;未跟踪：新创建的尚未被 git 管理&lt;/li&gt;
&lt;li&gt;未修改：被 git 管理，但内容没有变化&lt;/li&gt;
&lt;li&gt;已修改：修改了，尚未添加至暂存区&lt;/li&gt;
&lt;li&gt;已暂存：修改后添加到暂存区&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81.png&#34;
	width=&#34;2156&#34;
	height=&#34;1079&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81_hu7696283050929269719.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%96%87%E4%BB%B6%E7%8A%B6%E6%80%81_hu13697550523304496684.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;479px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;git-基本使用语法&#34;&gt;Git 基本使用语法
&lt;/h2&gt;&lt;h3 id=&#34;git-status&#34;&gt;git status
&lt;/h3&gt;&lt;p&gt;查看仓库的状态&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81.png&#34;
	width=&#34;1264&#34;
	height=&#34;368&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81_hu10008576932167673638.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%81_hu14648367488950203436.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;343&#34;
		data-flex-basis=&#34;824px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-s：表示简略模式显示仓库状态，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Untracked files：文件为跟踪，表示文件处于工作区&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-add&#34;&gt;git add
&lt;/h3&gt;&lt;p&gt;将文件添加到暂存区&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%812.png&#34;
	width=&#34;1070&#34;
	height=&#34;332&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%812_hu15601156070930759228.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E4%BB%93%E5%BA%93%E7%8A%B6%E6%80%812_hu4619398341199028392.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;322&#34;
		data-flex-basis=&#34;773px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文件显示为绿色时，代表文件存放在暂存区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意！！！ 使用 &lt;code&gt;git rm --cache &amp;lt;file&amp;gt;&lt;/code&gt; 可以将文件从暂存区撤回工作区&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-commit&#34;&gt;git commit
&lt;/h3&gt;&lt;p&gt;提交文件到仓库中（将暂存区中的文件提交到仓库中）&lt;/p&gt;
&lt;p&gt;-m 参数：该参数用于描述提交的信息。建议每次提交都带上，否则会强制进入文本输入（eg：vim）要求你输入信息&lt;/p&gt;
&lt;p&gt;**小技巧：**使用 &lt;code&gt;git -a -m &amp;quot;&amp;quot;&lt;/code&gt; 可以同时完成提交和暂存两个动作&lt;/p&gt;
&lt;h3 id=&#34;git-log&#34;&gt;git log
&lt;/h3&gt;&lt;p&gt;用于查看提交记录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95.png&#34;
	width=&#34;1356&#34;
	height=&#34;436&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95_hu5836693182275284003.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/%E6%9F%A5%E7%9C%8B%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95_hu6224861262995671892.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;311&#34;
		data-flex-basis=&#34;746px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;使用参数 &lt;code&gt;git log --oneline&lt;/code&gt; 仅显示提交的 ID 和提交信息&lt;/p&gt;
&lt;h2 id=&#34;回退版本&#34;&gt;回退版本
&lt;/h2&gt;&lt;h3 id=&#34;git-reset---soft&#34;&gt;git reset &amp;ndash;soft
&lt;/h3&gt;&lt;p&gt;回退到某一个版本，并且保留工作区和暂存区的所有修改内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_soft.png&#34;
	width=&#34;2164&#34;
	height=&#34;1430&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_soft_hu1920477276732208150.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_soft_hu9170082774352484769.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;151&#34;
		data-flex-basis=&#34;363px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-reset---hard&#34;&gt;git reset &amp;ndash;hard
&lt;/h3&gt;&lt;p&gt;回退到某一个版本，并且丢弃工作区和暂存区的所有修改内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_hard.png&#34;
	width=&#34;1612&#34;
	height=&#34;1152&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_hard_hu13917093230682029782.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_hard_hu8392761666997332459.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;335px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-reset---mixed&#34;&gt;git reset &amp;ndash;mixed
&lt;/h3&gt;&lt;p&gt;默认参数&lt;/p&gt;
&lt;p&gt;回退到某一个版本，保存工作区的修改内容，丢弃暂存区的修改内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset.png&#34;
	width=&#34;1528&#34;
	height=&#34;1158&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_hu16344890979074493623.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_reset_hu8545435006585940121.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;git-reflog&#34;&gt;git reflog
&lt;/h3&gt;&lt;p&gt;查看操作的历史记录，可借助操作的历史记录和 &lt;code&gt;git reset --hard&lt;/code&gt; 回溯到之前某一个误操作的命令之前&lt;/p&gt;
&lt;h2 id=&#34;查看差异&#34;&gt;查看差异
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;git diff&lt;/code&gt; 用于查看工作区、暂存区、本地仓库之间的差异，也可用于查看文件在两个特定版本或分支之间的差异&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不加参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认比较工作区和暂存区之间的差异，显示发生更改的文件以及更改的详细信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff.png&#34;
	width=&#34;2514&#34;
	height=&#34;420&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_hu9336437624422792156.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_hu12040246128594081449.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;598&#34;
		data-flex-basis=&#34;1436px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HEAD 参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;比较工作区和版本库之间的内容&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_HEAD.png&#34;
	width=&#34;1578&#34;
	height=&#34;424&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_HEAD_hu7290185542847590748.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_HEAD_hu2965077661842694190.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;372&#34;
		data-flex-basis=&#34;893px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ndash;cached 参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;比较暂存区和版本库之间的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果同上图&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git diff &amp;lt;版本提交 ID1&amp;gt; &amp;lt;版本提交 ID2&amp;gt; [指定文件名称]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;比较（可指定）文件两次不同版本之间的差异&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_%E7%89%88%E6%9C%ACID1_%E7%89%88%E6%9C%ACID2.png&#34;
	width=&#34;1474&#34;
	height=&#34;332&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_%E7%89%88%E6%9C%ACID1_%E7%89%88%E6%9C%ACID2_hu8648598315040167430.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/git_diff_%E7%89%88%E6%9C%ACID1_%E7%89%88%E6%9C%ACID2_hu16468195376548306577.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;443&#34;
		data-flex-basis=&#34;1065px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;补充：HEAD 可用于表示当前分支的最新提交，HEAD~ 或 HEAD^ 可用于表示上一次提交，加数字可表示多个之前的版本（eg: HEAD~2 表示当前版本的前两个版本）&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;删除文件&#34;&gt;删除文件
&lt;/h2&gt;&lt;p&gt;两种方式：&lt;/p&gt;
&lt;h3 id=&#34;借助-git-更新版本达到删除文件的目的&#34;&gt;借助 git 更新版本达到删除文件的目的
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;从工作区删除文件（即删除本地文件）&lt;/li&gt;
&lt;li&gt;从暂存区删除文件（使用 &lt;code&gt;git add .&lt;/code&gt; 更新工作区文件到暂存区）&lt;/li&gt;
&lt;li&gt;从本地仓库删除文件（使用 &lt;code&gt;git commit&lt;/code&gt; 更新暂存区到本地仓库中）&lt;/li&gt;
&lt;li&gt;从而达到删除文件的目的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用-git-rm-命令&#34;&gt;使用 git rm 命令
&lt;/h3&gt;&lt;p&gt;该命令会同时删除工作区和暂存区中的文件，&lt;strong&gt;但本地仓库中任然存在该文件，需重新提交从而从本地仓库中删除文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rm &amp;lt;file&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;把文件从工作区和暂存区同时删除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rm --cached &amp;lt;file&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;把文件从暂存区中删除，但保留在当前工作区中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rm -r *&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;递归删除某个目录下的所有子目录和文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;忽略文件&#34;&gt;忽略文件
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;.gitignore&lt;/strong&gt; 文件可使该文件夹下的某些文件（为被添加到版本库中的文件）被忽略，不被加入到版本库中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应该忽略的文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统或者软件自动生成的文件&lt;/li&gt;
&lt;li&gt;编译产生的中间文件和结果文件&lt;/li&gt;
&lt;li&gt;运行时生成日志文件、缓存文件、临时文件&lt;/li&gt;
&lt;li&gt;涉及身份、密码、口令、密钥等敏感信息文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;文件的匹配规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从上到下逐行匹配，一行表示一个忽略模式&lt;/li&gt;
&lt;li&gt;空行或 # 开头的行会被忽略&lt;/li&gt;
&lt;li&gt;使用标准的 glob 模式匹配&lt;/li&gt;
&lt;li&gt;** 表示匹配任意的中间目录&lt;/li&gt;
&lt;li&gt;! 表示取反，即指定文件一定不会被忽略&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;远程仓库&#34;&gt;远程仓库
&lt;/h2&gt;&lt;p&gt;远程仓库和本地仓库是相互独立的两个仓库，&lt;strong&gt;克隆仓库&lt;/strong&gt;即指把远程仓库的所有内容复制到本地。&lt;/p&gt;
&lt;h3 id=&#34;远程仓库地址的两种方式&#34;&gt;&lt;strong&gt;远程仓库地址的两种方式：&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;HTTPS
&lt;ul&gt;
&lt;li&gt;每次 push 需验证用户名和密码（不推荐）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSH
&lt;ul&gt;
&lt;li&gt;push 时不需要用户名和密码，但需要在 github 上添加 SSH 公钥配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置-ssh-密钥&#34;&gt;配置 SSH 密钥
&lt;/h4&gt;&lt;p&gt;使用 ssh 方式连接远程仓库，必须配置 ssh 密钥&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;！！！建议配置时，上网查阅，此处记录较为简陋&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用该命令&lt;code&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt; 用于生成密钥&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/ssh-keygen.png&#34;
	width=&#34;1804&#34;
	height=&#34;720&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/ssh-keygen_hu10060007959036786188.png 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/ssh-keygen_hu732416696815963097.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;250&#34;
		data-flex-basis=&#34;601px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;执行后，会生成密钥文件（id_rsa）和公钥文件(id_rsa.pub)，将公钥填入账户配置中即可。(如果指定文件名称，则会生成对应的文件及文件.pub，同时还需再进一步配置)&lt;/p&gt;
&lt;h3 id=&#34;克隆仓库&#34;&gt;克隆仓库
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;克隆仓库 &lt;code&gt;git clone repo-address&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;推送更新内容 &lt;code&gt;git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拉取更新内容 &lt;code&gt;git pull &amp;lt;remote&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关联本地仓库和远程仓库&#34;&gt;关联本地仓库和远程仓库
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;建立本地仓库和远程仓库的关联：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;建立连接：&lt;code&gt;git remote add &amp;lt;shortname&amp;gt; &amp;lt;url&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;将本地仓库与远程仓库连接起来，其中 shortname 设置远程仓库的别名，url 为远程仓库的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看仓库信息：&lt;code&gt;git remote -v&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;查看当前仓库所对应的远程仓库的别名和地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;指定本地分支名称：&lt;code&gt;git branch -M main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;建立关联分支：&lt;code&gt;git push -u origin main:main&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;将本地仓库的 main 分支和远程仓库的 main 分支关联起来，若本地与远程分支名相同，建立连接时可省略冒号后面部分&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;同步远程仓库与本地仓库的内容&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git pull &amp;lt;远程仓库别名&amp;gt; &amp;lt;远程分支名&amp;gt;:&amp;lt;本地分支名&amp;gt;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;将远程仓库文件拉取到本地再合并（可能会因内容冲突而失败）&lt;/li&gt;
&lt;li&gt;省略参数默认为 &lt;code&gt;git pull origin main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git fetch&lt;/code&gt; 与该命令相同，都可以从远程仓库获取修改的内容，但&lt;strong&gt;不会自动合并&lt;/strong&gt;，需手动合并&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分支&#34;&gt;分支
&lt;/h2&gt;&lt;h3 id=&#34;分支的基本操作&#34;&gt;分支的基本操作
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看当前所有分支：&lt;code&gt;git branch&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建新分支：&lt;code&gt;git branch &amp;lt;分支名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换不同分支：&lt;code&gt;git checkout &amp;lt;分支名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout&lt;/code&gt; 也可用于恢复文件，若出现文件名与分支名相同的情况，则默认为切换分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git switch &amp;lt;分支名&amp;gt;&lt;/code&gt; 专门用于切换分支名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合并分支：&lt;code&gt;git merge &amp;lt;分支名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将指定分支合并到当前分支&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看分支图：&lt;code&gt;git log --graph --oneline --decorate --all&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除分支：&lt;code&gt;git branch -d&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-d：只能删除已经被合并的分支&lt;/li&gt;
&lt;li&gt;-D：强制删除分支&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决合并冲突&#34;&gt;解决合并冲突
&lt;/h3&gt;&lt;p&gt;当两个分支中出现同一份文件的同一行代码出现差异时，就会发生合并冲突&lt;/p&gt;
&lt;p&gt;当发生合并冲突时，需到文件对应位置进行修改再提交&lt;/p&gt;
&lt;p&gt;中断合并：&lt;code&gt;git merge --abort&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;回退和rebase&#34;&gt;回退和rebase
&lt;/h3&gt;&lt;h4 id=&#34;回退分支&#34;&gt;回退分支
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;回退到某一分支：&lt;code&gt;git checkout -b &amp;lt;分支名&amp;gt; &amp;lt;对应分支ID&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;rebase变基&#34;&gt;rebase变基
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git rebase &amp;lt;分支名&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;rebase执行的操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/rebase.PNG&#34;
	width=&#34;2139&#34;
	height=&#34;1215&#34;
	srcset=&#34;https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/rebase_hu74654466940332002.PNG 480w, https://loml717.github.io/p/git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/rebase_hu3169999775974732021.PNG 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;176&#34;
		data-flex-basis=&#34;422px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;merge和rebase&#34;&gt;Merge和Rebase
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;merge
&lt;ul&gt;
&lt;li&gt;优：不会破坏原分支的提交历史，方便回溯和查看&lt;/li&gt;
&lt;li&gt;缺：产生额外提交节点，分支图比较复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;rebase
&lt;ul&gt;
&lt;li&gt;优：不新增额外的提交记录，形成线性历史，直观干净&lt;/li&gt;
&lt;li&gt;缺：改变提交历史，改变当前分支 branch out 的节点，避免在共享分支使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Win10任务栏透明</title>
        <link>https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/</link>
        <pubDate>Sat, 28 Sep 2024 10:23:47 +0800</pubDate>
        
        <guid>https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/</guid>
        <description>&lt;img src="https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/5.png" alt="Featured image of post Win10任务栏透明" /&gt;&lt;h1 id=&#34;通过regedit使win10任务栏透明&#34;&gt;通过regedit使win10任务栏透明
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过 win + R 输入 regedit 打开注册表&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/1.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/1_hu6265096891015556804.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/1_hu3203776095451660311.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定位到目录&lt;code&gt;计算机\HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/2.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/2_hu16832649965650392185.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/2_hu9673627919363668169.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;2&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;右侧空白处右键，新建→DWORD (32位) 值，并将其重命名为 &lt;code&gt;TaskbarAcrylicOpacity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/3.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/3_hu4909223878809854480.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/3_hu7310427499959324183.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;3&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双击文件，&lt;strong&gt;选择十进制&lt;/strong&gt;，调整数据数值，0为完全透明，10为完全不透明，点击确定即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/4.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/4_hu10103944926029115434.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/4_hu17075568848433583157.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;4&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/5.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/5_hu297369554155287310.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/5_hu3892218188305807882.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;5&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;建议！（效果应该会更好点）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将颜色选择为自定义，并修改为如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/6.png&#34;
	width=&#34;2880&#34;
	height=&#34;1800&#34;
	srcset=&#34;https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/6_hu9552844228479637790.png 480w, https://loml717.github.io/p/win10%E4%BB%BB%E5%8A%A1%E6%A0%8F%E9%80%8F%E6%98%8E/6_hu14835500907843357360.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;6&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;160&#34;
		data-flex-basis=&#34;384px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://loml717.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://loml717.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://loml717.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://loml717.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;h1 id=&#34;博客使用说明&#34;&gt;博客使用说明
&lt;/h1&gt;&lt;h2 id=&#34;创建文章&#34;&gt;创建文章
&lt;/h2&gt;&lt;p&gt;在 &lt;code&gt;cmd&lt;/code&gt; 中输入&lt;code&gt;hugo new content post/文章名称/index.md&lt;/code&gt; 即可生成对应文件，文件头部会自动生成类似下方图片的参数设置，通过修改相关参数即可使该文章在主页中出现不同的效果，同时还可以给文章起到分类作用。参数设置成功后即可输入文章相关内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意！参数上边与下边都需要用分割线分隔开&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://loml717.github.io/%E5%85%B3%E4%BA%8E/image1.png&#34;
	width=&#34;1998&#34;
	height=&#34;850&#34;
	srcset=&#34;https://loml717.github.io/%E5%85%B3%E4%BA%8E/image1_hu2329282943116448934.png 480w, https://loml717.github.io/%E5%85%B3%E4%BA%8E/image1_hu1253308470572152549.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;235&#34;
		data-flex-basis=&#34;564px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;默认貌似无法生成归类等参数的设置，可以通过复制张贴几行修改为对应参数填写。。。&lt;/p&gt;
&lt;h2 id=&#34;创建分类&#34;&gt;创建分类
&lt;/h2&gt;&lt;p&gt;找到路径 &lt;code&gt;content/categories&lt;/code&gt; 在该文件下创建如下文件夹和文件 &lt;code&gt;分类名称/_index.md&lt;/code&gt; , 在 &lt;code&gt;.md&lt;/code&gt; 文件的头部输入如下类似的参数即可成功创建一个分类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意！参数必须写在 YAML Front Matter 中&lt;/strong&gt;
&lt;img src=&#34;https://loml717.github.io/%E5%85%B3%E4%BA%8E/image2.png&#34;
	width=&#34;1980&#34;
	height=&#34;394&#34;
	srcset=&#34;https://loml717.github.io/%E5%85%B3%E4%BA%8E/image2_hu288522141300659307.png 480w, https://loml717.github.io/%E5%85%B3%E4%BA%8E/image2_hu12123283247433304807.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;502&#34;
		data-flex-basis=&#34;1206px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;参数介绍：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;title：分类标题&lt;/li&gt;
&lt;li&gt;description：分类描述，会在归档中显示&lt;/li&gt;
&lt;li&gt;slug：在右侧边栏显示分类名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文章中插入图片&#34;&gt;文章中插入图片
&lt;/h2&gt;&lt;p&gt;在 hugo 中想要使文章中的图片在网页中显示，不能按照 markdown 原本的插入格式插入，而是应当使用如下格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;![ImageName](imagename.png)&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;将文章同步到-github-上&#34;&gt;将文章同步到 github 上
&lt;/h2&gt;&lt;p&gt;直接通过 git 将包含 hugo 执行程序和该主题所有相关配置文件的文件夹重新上传至仓库中即可，github 将通过 action 自动同步静态网页文件到公开为站点的仓库中，文章就成功的上传到博客中了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网站具体配置详情，请参考文档：&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack | Card-style Hugo theme designed for bloggers (jimmycai.com)&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://loml717.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://loml717.github.io/search/</guid>
        <description></description>
        </item>
        <item>
        <title>友情链接</title>
        <link>https://loml717.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://loml717.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
